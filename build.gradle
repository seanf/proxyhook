buildscript {
  ext.kotlin_version = '1.1.3'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

subprojects {
  apply plugin: 'kotlin'
  apply plugin: 'jacoco'
  // TODO set up detekt

  repositories {
    mavenCentral()
    jcenter()
  }

  sourceCompatibility = '1.8'

  dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'io.vertx:vertx-core:3.4.2'
    compile 'io.vertx:vertx-web:3.4.2'
    testCompile 'io.vertx:vertx-unit:3.4.2'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.6.2'
  }

  task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
  }

  jacoco {
    toolVersion = '0.7.9'
//  reportsDir = file("$buildDir/customJacocoReportDir")
  }

  jacocoTestReport {
    reports {
      xml.enabled true
//    html.enabled false
    }
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }

}

task('setVersionFromBuild') << {
  def buildNumber = System.getenv('BUILD_NUMBER')
  if (buildNumber) {
    def newVersion = version.replace('-SNAPSHOT', ".$buildNumber")
    logger.quiet "Setting version to $newVersion"
    ant.propertyfile(file: 'gradle.properties', comment: 'Edited by setVersionFromBuild') {
      entry(key: 'version', value: newVersion)
    }
  } else {
    logger.warn 'No BUILD_NUMBER. Skipping.'
  }
}
